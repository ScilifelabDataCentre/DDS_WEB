# yammllint and prettier conflict with some rules, disable them
# yamllint disable rule:braces
openapi: 3.0.0
info:
  description: |
    Documentation for the API of the Data Delivery System (DDS) in SciLifeLab.

    WARNING: Some endpoints are not according to the OpenAPI standard, and therefore
    cannot be documented properly. These endpoints are marked with CHECK METHOD and as deprecated.
    These endpoints will be changed in the future, and will be documented properly in the url
    https://delivery.scilifelab.se/api/documentation/v3
  version: "" # leave empty, as otherwise will need to be updated every new release
  title: Data Delivery System
# Apply the encrypted token to all operations
security:
  - seconFactorToken: []
servers:
  # Added by API Auto Mocking Plugin
  - url: https://delivery.scilifelab.se/api/v1
    description: Endpoint for the production server
  - url: https://dds-dev.dckube3.scilifelab.se/api/v1
    description: Endpoint for the test server
  # Uncomment when local testing
  - url: http://localhost:5000/api/v1
    description: Local enviroment
tags:
  - name: authentication
    description: Authorization and authentication operations
  - name: files
    description: Manage files operations
  - name: user
    description: Operations about user
  - name: project
    description: Operations about projects
  - name: s3
    description: s3 bucket
  - name: superadmin
    description: Superadmin operations
paths:
  ### FILES OPERATIONS #########
  /file/new:
    post:
      tags:
        - files
      summary: Add a new file to the database
      operationId: newFile
      parameters:
        - $ref: "#/components/parameters/defaultHeader"
        - $ref: "#/components/parameters/projectID"
      responses:
        "401":
          $ref: "#/components/responses/UnauthorizedToken"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerlError"
        "200":
          description: succesful operation
          content:
            application/json:
              schema:
                type: string
                example: "{message: File data_seq.txt added to db.}"
      requestBody:
        $ref: "#/components/requestBodies/Files"
    put:
      tags:
        - files
      summary: Update an existing file
      operationId: updateFile
      parameters:
        - $ref: "#/components/parameters/defaultHeader"
        - $ref: "#/components/parameters/projectID"
      responses:
        "401":
          $ref: "#/components/responses/UnauthorizedToken"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerlError"
        "200":
          description: succesful operation
          content:
            application/json:
              schema:
                type: string
                example: "{message: File data_seq.txt updated in the db.}"
      requestBody:
        $ref: "#/components/requestBodies/Files"
  /file/match:
    get:
      tags:
        - files
      summary: Get name in bucket for all files specified CHECK METHOD
      description: This method requires the data
        to be passed in the request body instead of the query.
        Since this does not comply with the openAPI standards, swagger cannot document it properly,
        therefore we need to change/remove it in the future.
      deprecated: true
      operationId: matchFiles
      parameters:
        - $ref: "#/components/parameters/defaultHeader"
        - $ref: "#/components/parameters/projectID"
      responses:
        "401":
          $ref: "#/components/responses/UnauthorizedToken"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerlError"
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  files:
                    type: array
                    items:
                      type: string
                    example: [name_in_bucket, name_in_bucket_2]
  /files/list:
    get:
      tags:
        - files
      summary: Get a list of files within the specific folder CHECK METHOD
      description: This method requires the data
        to be passed in the request body instead of the query.
        Since this does not comply with the openAPI standards, swagger cannot document it properly,
        therefore we need to change/remove it in the future.
      deprecated: true
      operationId: listFiles
      parameters:
        - $ref: "#/components/parameters/defaultHeader"
        - $ref: "#/components/parameters/projectID"
      responses:
        "401":
          $ref: "#/components/responses/UnauthorizedToken"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerlError"
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  files_folder:
                    type: array
                    items:
                      type: object
                      properties:
                        folder:
                          type: boolean
                        name:
                          type: string
                    example:
                      [
                        { "folder": true, "name": "filename1" },
                        { "folder": true, "name": "filename2" },
                        { "folder": true, "name": "sub" },
                      ]
  /file/rm:
    delete:
      tags:
        - files
      summary: Deletes a file CHECK METHOD
      description: This method requires the data
        to be passed in the request body instead of the query.
        Since this does not comply with the openAPI standards, swagger cannot document it properly,
        therefore we need to change/remove it in the future.
      deprecated: true
      operationId: removeFile
      parameters:
        - $ref: "#/components/parameters/defaultHeader"
        - $ref: "#/components/parameters/projectID"
        - name: json
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
            example: [file_name.txt, file_name_2.txt]
      responses:
        "401":
          $ref: "#/components/responses/UnauthorizedToken"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerlError"
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  not_removed:
                    type: boolean
                  not_exists:
                    type: boolean
                example: { "not_removed": false, "not_exists": false }
  /file/rmdir:
    delete:
      tags:
        - files
      summary: Deletes folder(s) CHECK METHOD
      description: This method requires the data
        to be passed in the request body instead of the query.
        Since this does not comply with the openAPI standards, swagger cannot document it properly,
        therefore we need to change/remove it in the future.
      deprecated: true
      operationId: removeDir
      parameters:
        - $ref: "#/components/parameters/defaultHeader"
        - $ref: "#/components/parameters/projectID"
        - name: json
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
            example: [folder_1, folder_2]
      responses:
        "401":
          $ref: "#/components/responses/UnauthorizedToken"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerlError"
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  not_removed:
                    type: boolean
                  fail_type:
                    type: string
                  nr_deleted:
                    type: integer
                example: { "not_removed": false, "fail_type": "none", "nr_deleted": 10 } # yamllint disable-line
  /file/info:
    get:
      tags:
        - files
      summary: Get file info on files to download CHECK METHOD
      description: This method requires the data
        to be passed in the request body instead of the query.
        Since this does not comply with the openAPI standards, swagger cannot document it properly,
        therefore we need to change/remove it in the future.
      deprecated: true
      operationId: fileInfo
      parameters:
        - $ref: "#/components/parameters/defaultHeader"
        - $ref: "#/components/parameters/projectID"
        - name: json
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
            example: [file_name.txt]
      responses:
        "401":
          $ref: "#/components/responses/UnauthorizedToken"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerlError"
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  files:
                    type: array
                    items:
                      $ref: "#/components/schemas/Files"
  /file/all/info:
    get:
      tags:
        - files
      summary: Get info on all project files
      operationId: fileInfoAll
      parameters:
        - $ref: "#/components/parameters/defaultHeader"
        - $ref: "#/components/parameters/projectID"
      responses:
        "401":
          $ref: "#/components/responses/UnauthorizedToken"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerlError"
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  files:
                    type: array
                    items:
                      $ref: "#/components/schemas/Files"
  /file/update:
    put:
      tags:
        - files
      summary: Update file info after download
      parameters:
        - $ref: "#/components/parameters/defaultHeader"
        - $ref: "#/components/parameters/projectID"
      operationId: updateFile2
      responses:
        "405":
          description: Invalid input
        "200":
          description: succesful operation
          content:
            application/json:
              schema:
                type: string
                example: "{message: File info updated}"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: filename
  /file/failed/add:
    put:
      tags:
        - files
      summary: Get files from log file and save to database
      parameters:
        - $ref: "#/components/parameters/defaultHeader"
        - $ref: "#/components/parameters/projectID"
      operationId: addFailed
      responses:
        "405":
          description: Invalid input
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  files_added:
                    type: array
                    items:
                      type: string
                    example: [filefailed]
      requestBody:
        $ref: "#/components/requestBodies/FailedFiles"

  # LOGIN OPERATIONS
  /user/encrypted_token:
    get:
      tags:
        - authentication
      summary: Generates encrypted token for the user
      operationId: token
      parameters:
        - $ref: "#/components/parameters/defaultHeader"
      security:
        - encryptedToken: []
      responses:
        "401":
          $ref: "#/components/responses/UnauthorizedTwofactor"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerlError"
        "200":
          description: succesful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Please take this token to /user/second_factor
                      to authenticate with MFA!
                  token:
                    type: string
                  secondfactor_method:
                    type: string
                    example: secondfactor_method
  /user/second_factor:
    get:
      tags:
        - authentication
      summary: Take in and verify an authentication one-time code entered
        by an authenticated user with basic credentials CHECK METHOD
      description: This method requires the data
        to be passed in the request body instead of the query.
        Since this does not comply with the openAPI standards, swagger cannot document it properly,
        therefore we need to change/remove it in the future.
      deprecated: true
      operationId: secondFactorGet
      parameters:
        - $ref: "#/components/parameters/defaultHeader"
        - name: TOTP
          in: query
          required: true
          schema:
            type: string
      responses:
        "401":
          $ref: "#/components/responses/UnauthorizedToken"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerlError"
        "200":
          description: succesful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
    post:
      tags:
        - authentication
      summary: Take in and verify an authentication one-time code entered by
        an authenticated user with basic credentials
      description: Send either the HOTP or TOTP code
        depending on the two factor method used
      operationId: secondFactorPost
      parameters:
        - $ref: "#/components/parameters/defaultHeader"
      responses:
        "401":
          $ref: "#/components/responses/UnauthorizedToken"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerlError"
        "200":
          description: succesful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
      requestBody:
        $ref: "#/components/requestBodies/Token"

components:
  # define reusable parameters:
  parameters:
    defaultHeader:
      name: X-CLI-Version
      in: header
      required: true
      schema:
        type: string
        example: "2.6.2"
      description: The oficial CLI provided by the DDS team always uses the
        latest stable version. When implementing your own client(s) make sure to set the
        correct version header in every request.
    projectID:
      name: project
      in: query
      schema:
        type: string
      description: project id to query
  # Define common request bodies:
  requestBodies:
    Files:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Files"
    FailedFiles:
      content:
        application/json:
          schema:
            type: object
            properties:
              filename:
                $ref: "#/components/schemas/FailedFiles"
    Token:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Token"
  # define reusable responses:
  responses:
    BadRequest:
      description: The requests is missing important information in the body
        or have invalidad data, such as invalid project specified
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    UnauthorizedTwofactor:
      description: Username and password not provided or is invalid
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    UnauthorizedToken:
      description: Encrypted Token is not provided or is invalid
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    InternalServerlError:
      description: Something wrong in the server side
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
  # define schemas for objects
  schemas:
    Files:
      type: object
      required:
        - name
        - name_in_bucket
        - subpath
        - size
        - size_processed
        - compressed
        - public_key
        - salt
        - checksum
      properties:
        name:
          type: string
          example: adn_secuence.txt
        name_in_bucket:
          type: string
          example: filebucketname1
        subpath:
          type: string
          example: subpath
        size:
          type: integer
          format: int64
          example: 1000
        size_processed:
          type: integer
          format: int64
          example: 500
        compressed:
          type: boolean
          example: true
        public_key:
          type: string
          example: pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp # yamllint disable-line
        salt:
          type: string
          example: ssssssssssssssssssssssssssssssss
        checksum:
          type: string
          example: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc # yamllint disable-line
    FailedFiles:
      type: object
      required:
        - status
        - path_remote
        - subpath
        - size_raw
        - size_processed
        - compressed
        - public_key
        - salt
        - checksum
      properties:
        status:
          type: object
          properties:
            failed_op:
              type: string
              example: add_file_db
        path_remote:
          type: string
          example: path/to/file1.txt
        subpath:
          type: string
          example: subpath
        size_raw:
          type: integer
          format: int64
          example: 100
        size_processed:
          type: integer
          format: int64
          example: 200
        compressed:
          type: boolean
          example: false
        public_key:
          type: string
          example: public_key
        salt:
          type: string
          example: salt
        checksum:
          type: string
          example: cheksum
    Token:
      type: object
      properties:
        HOTP:
          type: string
        TOTP:
          type: string
  # Securit schemes:
  securitySchemes:
    encryptedToken: # user and pass
      type: http
      scheme: basic
    seconFactorToken: # encrypted token
      type: http
      scheme: bearer
      bearerFormat: JWT
